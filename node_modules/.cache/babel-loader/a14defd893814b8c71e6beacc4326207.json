{"ast":null,"code":"var _jsxFileName = \"/media/bijay/583f95c8-a86a-4b11-8035-fb316c8eed2c/bijay/Reactjs Project/stock/src/DashBoard/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Sidenav from '../Widget/Stocklist/Sidenav/SideNav';\nimport { getUser } from \"../utils/Common\";\nimport \"../DashBoard/Dashboard.css\";\nimport { reduceHooks } from 'react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DashBoard() {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [stocks, setStocks] = useState([]);\n  const [unit, setUnit] = useState();\n  const [totalInvestment, setTotalInvestment] = useState();\n  const [soldAmount, setSoldAmount] = useState();\n  const [totalsoldAmount, setTotalSoldAmount] = useState();\n  const [totalbuyAmount, setTotalbuyAmount] = useState();\n  const profit = totalsoldAmount - totalbuyAmount; // console.log(profit);\n\n  const user = getUser();\n\n  const total = soldAmount => {\n    let aux = 0;\n\n    for (var key in soldAmount) {\n      aux = +soldAmount[key];\n    }\n\n    setTotalSoldAmount(aux);\n  };\n\n  useEffect(() => {\n    fetch(`http://localhost:8000/get-all?user=${user}`).then(res => res.json()).then(result => {\n      setStocks(result);\n      const unit = result.map(item => item.quantity).reduce((a, b) => parseInt(a) + parseInt(b));\n      setUnit(unit);\n      const invest = result.map(item => item.buyingorsellingprice).reduce((a, b) => parseInt(a) + parseInt(b));\n      setTotalInvestment(invest); //   const sold=result.map(item=>item.transactiontype).reduce((a,b)=>parseInt(a)+parseInt(b));\n      //    const sold=result.map(item=>item.transactiontype==\"Sell\" || item.transactiontype==\"sell\");\n\n      const sold = result.filter(item => item.transactiontype == \"Sell\" || item.transactiontype == \"sell\").map(item => parseInt(item.buyingorsellingprice));\n      const totalsold = sold.reduce((a, b) => a + b); //   setSoldAmount(sold);\n\n      setTotalSoldAmount(totalsold);\n      const buy = result.filter(item => item.transactiontype == \"Buy\" || item.transactiontype == \"buy\").map(item => parseInt(item.buyingorsellingprice));\n      const totalbuy = buy.reduce((a, b) => a + b);\n      setTotalbuyAmount(totalbuy); //   console.log(soldAmount)\n      //    console.log(sold);\n      //    const totalsold=soldAmount.reduce((a,b)=>parseInt(a)+parseInt(b),0)\n      //    console.log(totalsold)\n    }, error => {\n      setError(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-sidenav\",\n        children: /*#__PURE__*/_jsxDEV(Sidenav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-part1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-part2\",\n        children: [\"Total:\", unit, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this), \"Total Investment:\", totalInvestment, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }, this), \"Sold Amount: \", totalsoldAmount, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this), \"Total Buy: \", totalbuyAmount, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this), {\n          profit\n        } > 0 ? /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Overall Profit: \", profit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 26\n        }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Overall Loss: \", profit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(DashBoard, \"UO6Qu/92k/PYixeKOJTAerrcgAg=\");\n\n_c = DashBoard;\nexport default DashBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashBoard\");","map":{"version":3,"sources":["/media/bijay/583f95c8-a86a-4b11-8035-fb316c8eed2c/bijay/Reactjs Project/stock/src/DashBoard/Dashboard.js"],"names":["React","useEffect","useState","Sidenav","getUser","reduceHooks","DashBoard","error","setError","stocks","setStocks","unit","setUnit","totalInvestment","setTotalInvestment","soldAmount","setSoldAmount","totalsoldAmount","setTotalSoldAmount","totalbuyAmount","setTotalbuyAmount","profit","user","total","aux","key","fetch","then","res","json","result","map","item","quantity","reduce","a","b","parseInt","invest","buyingorsellingprice","sold","filter","transactiontype","totalsold","buy","totalbuy"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Sidenav from '../Widget/Stocklist/Sidenav/SideNav';\nimport {getUser} from \"../utils/Common\";\nimport \"../DashBoard/Dashboard.css\"\nimport { reduceHooks } from 'react-table';\n\n\nfunction DashBoard(){\n\n    const [error, setError]=useState(null);\n    \n    const [stocks,setStocks]=useState([]);\n    const [unit,setUnit]=useState();\n    const [totalInvestment, setTotalInvestment]=useState();\n    const [soldAmount,setSoldAmount]=useState();\n    const[totalsoldAmount, setTotalSoldAmount]=useState()\n\n    const [totalbuyAmount, setTotalbuyAmount]=useState()\n\n    const profit=totalsoldAmount-totalbuyAmount;\n    // console.log(profit);\n    const user=getUser();\n  \n  \n  \n    const total=(soldAmount)=>{\nlet aux=0;\nfor (var key in soldAmount){\n\n    aux=+soldAmount[key]\n}\nsetTotalSoldAmount(aux);\n    }\n    \n    \n    \n    useEffect(()=>{\n    \n        fetch(`http://localhost:8000/get-all?user=${user}`)\n        .then(res=>res.json())\n        .then(\n            (result)=>{\n    \n                setStocks(result);\n               const unit=result.map(item=>item.quantity).reduce((a,b)=>parseInt(a)+parseInt(b));\n               setUnit(unit);\n\n               const invest=result.map(item=>item.buyingorsellingprice).reduce((a,b)=>parseInt(a)+parseInt(b));\n              setTotalInvestment(invest);\n\n            //   const sold=result.map(item=>item.transactiontype).reduce((a,b)=>parseInt(a)+parseInt(b));\n\n           \n        //    const sold=result.map(item=>item.transactiontype==\"Sell\" || item.transactiontype==\"sell\");\n\n           const sold=result.filter((item)=>item.transactiontype==\"Sell\" || item.transactiontype==\"sell\").map((item=>parseInt(item.buyingorsellingprice))\n        \n           );\n\n\n\n           const totalsold=sold.reduce((a,b)=>(a)+(b))\n        //   setSoldAmount(sold);\n        setTotalSoldAmount(totalsold);\n\n\n\n        const buy=result.filter((item)=>item.transactiontype==\"Buy\" || item.transactiontype==\"buy\").map((item=>parseInt(item.buyingorsellingprice))\n        \n        );\n\n        const totalbuy=buy.reduce((a,b)=>a+b)\n        setTotalbuyAmount(totalbuy);\n    \n         \n\n\n        //   console.log(soldAmount)\n        //    console.log(sold);\n\n        //    const totalsold=soldAmount.reduce((a,b)=>parseInt(a)+parseInt(b),0)\n        //    console.log(totalsold)\n              \n            },\n            (error)=>{\n                setError(error);\n    \n                \n            }\n        )\n    },[])\n        return (\n    \n            <>\n    <div className=\"dashboard-main\">\n    <div className=\"dashboard-sidenav\">\n    <Sidenav/>\n      \n    </div>\n    \n        <div className=\"dashboard-part1\">\n    \n       \n        </div>\n    \n        <div className=\"dashboard-part2\">\n    \n        Total:{unit}\n        <br/>\n        Total Investment:{totalInvestment}\n        <br/>\n        Sold Amount: {totalsoldAmount}\n        <br/>\n        Total Buy: {totalbuyAmount}\n\n        <br/>\n\n\n\n\n        {\n\n            {profit}>0 ?(<h2>Overall Profit: {profit}</h2>):\n            (\n                <h2>Overall Loss: {profit}</h2>\n            )\n        } \n\n        </div>     \n    </div>\n    \n            </>\n        );\n    }\n\n\n    \n    \n    export default DashBoard;\n"]},"metadata":{},"sourceType":"module"}