{"ast":null,"code":"var _jsxFileName = \"/media/bijay/583f95c8-a86a-4b11-8035-fb316c8eed2c/bijay/Reactjs Project/stock/src/StockForm/StockForm.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { setUserSession } from \"../utils/Common\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction StockForm(props) {\n  _s();\n\n  const [stockname, setStockname] = useFormInput(\"\");\n  const [transactiontype, setTranseactiontype] = useFormInput(\"\");\n  const [quantity, setQuantity] = useFormInput(\"\");\n  const [buyingoorsellingprice, setBuyingorsellingprice] = useFormInput(\"\");\n  const [error, setError] = useState(null);\n\n  const handleSubmit = () => {\n    axios.post(\"http://localhost:8000/user-stock\", {\n      stockname: stockname.value,\n      transactiontype: transactiontype.value,\n      quantity: quantity.value,\n      buyingoorsellingprice: buyingoorsellingprice.value\n    }).then(response => {}).catch(error => {\n      if (error.response.status == 401) setError(error.response.data.message);else setError(\"Error\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"stock-fill-form\",\n      children: [\"Stockname\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ...stockname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 1\n      }, this), \"Transaction Type:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: transactiontype,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Buy\",\n          children: \"Buy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Sell\",\n          children: \" Sell\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 1\n      }, this), \"Quantity\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        ...quantity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 1\n      }, this), \"Buying or Selling price\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        ...buyingoorsellingprice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n}\n\n_s(StockForm, \"AL87Jhc5ZdSEfLXjMpx+l5IN8fE=\", false, function () {\n  return [useFormInput, useFormInput, useFormInput, useFormInput];\n});\n\n_c = StockForm;\n\nconst useFormInput = initialValue => {\n  _s2();\n\n  const [value, setValue] = useState(initialValue);\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  return {\n    value,\n    onChange: handleChange\n  };\n};\n\n_s2(useFormInput, \"L08zUdRTae9t+nWvf9xbU6NcRrM=\");\n\nexport default StockForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"StockForm\");","map":{"version":3,"sources":["/media/bijay/583f95c8-a86a-4b11-8035-fb316c8eed2c/bijay/Reactjs Project/stock/src/StockForm/StockForm.js"],"names":["React","useState","axios","setUserSession","StockForm","props","stockname","setStockname","useFormInput","transactiontype","setTranseactiontype","quantity","setQuantity","buyingoorsellingprice","setBuyingorsellingprice","error","setError","handleSubmit","post","value","then","response","catch","status","data","message","initialValue","setValue","handleChange","e","target","onChange"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAAQC,cAAR,QAA6B,iBAA7B;;;;AAKA,SAASC,SAAT,CAAmBC,KAAnB,EAAyB;AAAA;;AAErB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA0BC,YAAY,CAAC,EAAD,CAA5C;AACA,QAAM,CAACC,eAAD,EAAkBC,mBAAlB,IAAuCF,YAAY,CAAC,EAAD,CAAzD;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAAwBJ,YAAY,CAAC,EAAD,CAA1C;AACA,QAAM,CAACK,qBAAD,EAAwBC,uBAAxB,IAAiDN,YAAY,CAAC,EAAD,CAAnE;AACA,QAAK,CAACO,KAAD,EAAQC,QAAR,IAAkBf,QAAQ,CAAC,IAAD,CAA/B;;AAKA,QAAMgB,YAAY,GAAC,MAAI;AAEnBf,IAAAA,KAAK,CAACgB,IAAN,CAAW,kCAAX,EACA;AAEIZ,MAAAA,SAAS,EAACA,SAAS,CAACa,KAFxB;AAGIV,MAAAA,eAAe,EAACA,eAAe,CAACU,KAHpC;AAIIR,MAAAA,QAAQ,EAACA,QAAQ,CAACQ,KAJtB;AAKIN,MAAAA,qBAAqB,EAACA,qBAAqB,CAACM;AALhD,KADA,EASEC,IATF,CAWIC,QAAQ,IAAE,CAGT,CAdL,EAeEC,KAfF,CAeQP,KAAK,IAAE;AAEX,UAAGA,KAAK,CAACM,QAAN,CAAeE,MAAf,IAAuB,GAA1B,EACAP,QAAQ,CAACD,KAAK,CAACM,QAAN,CAAeG,IAAf,CAAoBC,OAArB,CAAR,CADA,KAIAT,QAAQ,CAAC,OAAD,CAAR;AACH,KAtBD;AAuBH,GAzBD;;AA2BA,sBAGI;AAAA,2BAER;AAAK,MAAA,KAAK,EAAC,iBAAX;AAAA,2CAES;AAAA;AAAA;AAAA;AAAA,cAFT,eAGA;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAA,WAAuBV;AAAvB;AAAA;AAAA;AAAA;AAAA,cAHA,oCAKiB;AAAA;AAAA;AAAA;AAAA,cALjB,eAMA;AAAQ,QAAA,KAAK,EAAEG,eAAf;AAAA,gCAGI;AAAQ,UAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAQ,UAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANA,2BAaQ;AAAA;AAAA;AAAA;AAAA,cAbR,eAcA;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAA,WAAyBE;AAAzB;AAAA;AAAA;AAAA;AAAA,cAdA,0CAgBuB;AAAA;AAAA;AAAA;AAAA,cAhBvB,eAiBA;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAA,WAAyBE;AAAzB;AAAA;AAAA;AAAA;AAAA,cAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFQ,mBAHJ;AA+BH;;GArEQT,S;UAE2BI,Y,EACaA,Y,EACfA,Y,EACyBA,Y;;;KALlDJ,S;;AA0ET,MAAMI,YAAY,GAAGkB,YAAY,IAAI;AAAA;;AACjC,QAAM,CAACP,KAAD,EAAQQ,QAAR,IAAoB1B,QAAQ,CAACyB,YAAD,CAAlC;;AAGA,QAAME,YAAY,GAAGC,CAAC,IAAI;AACxBF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASX,KAAV,CAAR;AACD,GAFD;;AAGA,SAAO;AACLA,IAAAA,KADK;AAELY,IAAAA,QAAQ,EAAEH;AAFL,GAAP;AAID,CAXH;;IAAMpB,Y;;AAYN,eAAeJ,SAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport axios from 'axios';\n\nimport {setUserSession} from \"../utils/Common\";\n\n\n\n\nfunction StockForm(props){\n\n    const [stockname, setStockname]=useFormInput(\"\")\n    const [transactiontype, setTranseactiontype]=useFormInput(\"\")\n    const [quantity, setQuantity]=useFormInput(\"\")\n    const [buyingoorsellingprice, setBuyingorsellingprice]=useFormInput(\"\")\n    const[error, setError]=useState(null)\n\n\n  \n\n    const handleSubmit=()=>{\n\n        axios.post(\"http://localhost:8000/user-stock\",\n        {\n\n            stockname:stockname.value,\n            transactiontype:transactiontype.value,\n            quantity:quantity.value,\n            buyingoorsellingprice:buyingoorsellingprice.value\n        }\n        \n        ).then(\n\n            response=>{\n\n\n            }\n        ).catch(error=>{\n\n            if(error.response.status==401)\n            setError(error.response.data.message);\n\n            else\n            setError(\"Error\")\n        })\n    }\n\n    return (\n\n\n        <>\n\n<div class=\"stock-fill-form\">\n\nStockname<br/>\n<input type=\"text\" {...stockname} />\n\nTransaction Type:<br/>\n<select value={transactiontype} >\n\n\n    <option value=\"Buy\">Buy</option>\n    <option value=\"Sell\"> Sell</option>\n</select>\n\nQuantity<br/>\n<input type=\"number\" {...quantity}/>\n\nBuying or Selling price<br/>\n<input type=\"number\" {...buyingoorsellingprice}/>\n\n\n\n</div>\n\n\n        </>\n    );\n}\n\n\n\n\nconst useFormInput = initialValue => {\n    const [value, setValue] = useState(initialValue);\n\n   \n    const handleChange = e => {\n      setValue(e.target.value);\n    }\n    return {\n      value,\n      onChange: handleChange\n    }\n  }\nexport default StockForm;"]},"metadata":{},"sourceType":"module"}