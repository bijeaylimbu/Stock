{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { setUserSession } from \"../utils/Common\";\nimport { response } from 'express';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useFormInput = initialValue => {\n  _s();\n\n  const [value, setValue] = useState(initialValue);\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  return {\n    value,\n    onChange: handleChange\n  };\n};\n\n_s(useFormInput, \"L08zUdRTae9t+nWvf9xbU6NcRrM=\");\n\nfunction StockForm(props) {\n  _s2();\n\n  const [stockname, setStockname] = useFormInput(\"\");\n  const [transactiontype, setTranseactiontype] = useFormInput(\"\");\n  const [quantity, setQuantity] = useFormInput(\"\");\n  const [buyingoorsellingprice, setBuyingorsellingprice] = useFormInput(\"\");\n  const [error, setError] = useState(null);\n\n  const handleSubmit = () => {\n    axios.post(\"http://localhost:8000/user-stock\", {\n      stockname: stockname.value,\n      transactiontype: transactiontype.value,\n      quantity: quantity.value,\n      buyingoorsellingprice: buyingoorsellingprice.value\n    }).then(response => {}).catch(error => {\n      if (error.response.status == 401) setError(error.response.data.message);else setError(\"Error\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s2(StockForm, \"AL87Jhc5ZdSEfLXjMpx+l5IN8fE=\", false, function () {\n  return [useFormInput, useFormInput, useFormInput, useFormInput];\n});\n\n_c = StockForm;\nexport default StockForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"StockForm\");","map":{"version":3,"sources":["/media/bijay/583f95c8-a86a-4b11-8035-fb316c8eed2c/bijay/Reactjs Project/stock/src/StockForm/StockForm.js"],"names":["React","useState","axios","setUserSession","response","useFormInput","initialValue","value","setValue","handleChange","e","target","onChange","StockForm","props","stockname","setStockname","transactiontype","setTranseactiontype","quantity","setQuantity","buyingoorsellingprice","setBuyingorsellingprice","error","setError","handleSubmit","post","then","catch","status","data","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAAQC,cAAR,QAA6B,iBAA7B;AACA,SAASC,QAAT,QAAyB,SAAzB;;;;AAGA,MAAMC,YAAY,GAAGC,YAAY,IAAI;AAAA;;AACjC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACK,YAAD,CAAlC;;AAGA,QAAMG,YAAY,GAAGC,CAAC,IAAI;AACxBF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAR;AACD,GAFD;;AAGA,SAAO;AACLA,IAAAA,KADK;AAELK,IAAAA,QAAQ,EAAEH;AAFL,GAAP;AAID,CAXH;;GAAMJ,Y;;AAaN,SAASQ,SAAT,CAAmBC,KAAnB,EAAyB;AAAA;;AAErB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA0BX,YAAY,CAAC,EAAD,CAA5C;AACA,QAAM,CAACY,eAAD,EAAkBC,mBAAlB,IAAuCb,YAAY,CAAC,EAAD,CAAzD;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAAwBf,YAAY,CAAC,EAAD,CAA1C;AACA,QAAM,CAACgB,qBAAD,EAAwBC,uBAAxB,IAAiDjB,YAAY,CAAC,EAAD,CAAnE;AACA,QAAK,CAACkB,KAAD,EAAQC,QAAR,IAAkBvB,QAAQ,CAAC,IAAD,CAA/B;;AAKA,QAAMwB,YAAY,GAAC,MAAI;AAEnBvB,IAAAA,KAAK,CAACwB,IAAN,CAAW,kCAAX,EACA;AAEIX,MAAAA,SAAS,EAACA,SAAS,CAACR,KAFxB;AAGIU,MAAAA,eAAe,EAACA,eAAe,CAACV,KAHpC;AAIIY,MAAAA,QAAQ,EAACA,QAAQ,CAACZ,KAJtB;AAKIc,MAAAA,qBAAqB,EAACA,qBAAqB,CAACd;AALhD,KADA,EASEoB,IATF,CAWIvB,QAAQ,IAAE,CAGT,CAdL,EAeEwB,KAfF,CAeQL,KAAK,IAAE;AAEX,UAAGA,KAAK,CAACnB,QAAN,CAAeyB,MAAf,IAAuB,GAA1B,EACAL,QAAQ,CAACD,KAAK,CAACnB,QAAN,CAAe0B,IAAf,CAAoBC,OAArB,CAAR,CADA,KAIAP,QAAQ,CAAC,OAAD,CAAR;AACH,KAtBD;AAuBH,GAzBD;;AA2BA,sBAGI,qCAHJ;AA+BH;;IArEQX,S;UAE2BR,Y,EACaA,Y,EACfA,Y,EACyBA,Y;;;KALlDQ,S;AAuET,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport axios from 'axios';\n\nimport {setUserSession} from \"../utils/Common\";\nimport { response } from 'express';\n\n\nconst useFormInput = initialValue => {\n    const [value, setValue] = useState(initialValue);\n\n   \n    const handleChange = e => {\n      setValue(e.target.value);\n    }\n    return {\n      value,\n      onChange: handleChange\n    }\n  }\n\nfunction StockForm(props){\n\n    const [stockname, setStockname]=useFormInput(\"\")\n    const [transactiontype, setTranseactiontype]=useFormInput(\"\")\n    const [quantity, setQuantity]=useFormInput(\"\")\n    const [buyingoorsellingprice, setBuyingorsellingprice]=useFormInput(\"\")\n    const[error, setError]=useState(null)\n\n\n  \n\n    const handleSubmit=()=>{\n\n        axios.post(\"http://localhost:8000/user-stock\",\n        {\n\n            stockname:stockname.value,\n            transactiontype:transactiontype.value,\n            quantity:quantity.value,\n            buyingoorsellingprice:buyingoorsellingprice.value\n        }\n        \n        ).then(\n\n            response=>{\n\n\n            }\n        ).catch(error=>{\n\n            if(error.response.status==401)\n            setError(error.response.data.message);\n\n            else\n            setError(\"Error\")\n        })\n    }\n\n    return (\n\n\n        <>\n{/* \n<div class=\"stock-fill-form\">\n\nStockname<br/>\n<input type=\"text\" {...stockname} />\n\nTransaction Type:<br/>\n<select value={transactiontype} >\n\n\n    <option value=\"Buy\">Buy</option>\n    <option value=\"Sell\"> Sell</option>\n</select>\n\nQuantity<br/>\n<input type=\"number\" {...quantity}/>\n\nBuying or Selling price<br/>\n<input type=\"number\" {...buyingoorsellingprice}/>\n\n\n\n</div> */}\n\n\n        </>\n    );\n}\n\nexport default StockForm;"]},"metadata":{},"sourceType":"module"}