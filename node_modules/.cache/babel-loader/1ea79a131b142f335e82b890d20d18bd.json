{"ast":null,"code":"var _jsxFileName = \"/media/bijay/583f95c8-a86a-4b11-8035-fb316c8eed2c/bijay/Reactjs Project/stock/src/StockDashboard/StockDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport \"../StockDashboard/StockDashboard.css\";\nimport Sidenav from '../Widget/Stocklist/Sidenav/SideNav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction StockDashBoard() {\n  _s();\n\n  const [stockname, setStockname] = useState([]);\n  const [totalInvest, setTotalInvest] = useState([]);\n  const [unit, setUnit] = useState([]); //   const all=[...stockname, ...allstock]\n  // console.log(all)\n  //   console.log(typeof(allstock))\n\n  useEffect(() => {\n    fetch(\"http://localhost:8000/all-stocks\").then(res => res.json()).then(result => {\n      // setStockname(result)\n      // console.log(result)\n      const allstock = result.map(x => x.stockname);\n      const unique = [...new Set(allstock)]; // setAllStock(unique)\n\n      setStockname(unique);\n      const investTotal = [];\n      const totalUnit = [];\n\n      for (var i = 0; i <= unique.length - 1; i++) {\n        // const total=result.filter((item)=>item.stockname==unique[i]).map((item=>parseInt(item.amount)));\n        // const totalbuy=total.reduce((a,b)=>a+b)\n        // setTotalBuy(totalbuy)\n        const total_inv = result.filter(item => item.stockname == unique[i]).map(item => item.amount);\n        const total = total_inv.reduce((a, b) => parseInt(a) + parseInt(b));\n        investTotal.push(parseInt(total)); // console.log(count)\n        // setAllStock(total)\n      }\n\n      setTotalInvest(investTotal);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stockdashboard-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stokdashboard-part1\",\n        children: /*#__PURE__*/_jsxDEV(Sidenav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stokdashboard-part2\",\n        children: stockname && stockname.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"td\",\n          children: [\"Company Name:     \", item, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), \"Total Investment:      \", totalInvest[index], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n}\n\n_s(StockDashBoard, \"EpLGSwLXoSJow7GP0iCLQJb2MUg=\");\n\n_c = StockDashBoard;\nexport default StockDashBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"StockDashBoard\");","map":{"version":3,"sources":["/media/bijay/583f95c8-a86a-4b11-8035-fb316c8eed2c/bijay/Reactjs Project/stock/src/StockDashboard/StockDashboard.js"],"names":["React","useEffect","useState","Sidenav","StockDashBoard","stockname","setStockname","totalInvest","setTotalInvest","unit","setUnit","fetch","then","res","json","result","allstock","map","x","unique","Set","investTotal","totalUnit","i","length","total_inv","filter","item","amount","total","reduce","a","b","parseInt","push","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAO,sCAAP;AACA,OAAOC,OAAP,MAAoB,qCAApB;;;;AACA,SAASC,cAAT,GAAyB;AAAA;;AAGvB,QAAK,CAAEC,SAAF,EAAaC,YAAb,IAA2BJ,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAACK,WAAD,EAAaC,cAAb,IAA6BN,QAAQ,CAAC,EAAD,CAA3C;AAEA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAgBR,QAAQ,CAAC,EAAD,CAA9B,CAPuB,CAUzB;AAEA;AACA;;AAIED,EAAAA,SAAS,CAAC,MAAI;AAEZU,IAAAA,KAAK,CAAC,kCAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EADX,EAECF,IAFD,CAGKG,MAAD,IAAU;AAEN;AACA;AAEA,YAAMC,QAAQ,GAACD,MAAM,CAACE,GAAP,CAAWC,CAAC,IAAGA,CAAC,CAACb,SAAjB,CAAf;AACA,YAAMc,MAAM,GAAC,CAAC,GAAG,IAAIC,GAAJ,CAAQJ,QAAR,CAAJ,CAAb,CANM,CAQN;;AACFV,MAAAA,YAAY,CAACa,MAAD,CAAZ;AASA,YAAME,WAAW,GAAC,EAAlB;AAEA,YAAMC,SAAS,GAAC,EAAhB;;AACE,WAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,IAAEJ,MAAM,CAACK,MAAP,GAAc,CAA/B,EAAkCD,CAAC,EAAnC,EAAsC;AAElC;AACA;AAEA;AAIA,cAAME,SAAS,GAAEV,MAAM,CAACW,MAAP,CAAeC,IAAD,IAASA,IAAI,CAACtB,SAAL,IAAgBc,MAAM,CAACI,CAAD,CAA7C,EAAkDN,GAAlD,CAAuDU,IAAD,IAAQA,IAAI,CAACC,MAAnE,CAAjB;AAEC,cAAMC,KAAK,GAACJ,SAAS,CAACK,MAAV,CAAiB,CAACC,CAAD,EAAGC,CAAH,KAAOC,QAAQ,CAACF,CAAD,CAAR,GAAYE,QAAQ,CAACD,CAAD,CAA5C,CAAZ;AAELX,QAAAA,WAAW,CAACa,IAAZ,CAAiBD,QAAQ,CAACJ,KAAD,CAAzB,EAbsC,CActC;AAGA;AAIC;;AACDrB,MAAAA,cAAc,CAACa,WAAD,CAAd;AAKH,KAnDL;AAuDD,GAzDQ,EAyDP,EAzDO,CAAT;AA6DE,sBAGI;AAAA,2BAER;AAAM,MAAA,SAAS,EAAC,qBAAhB;AAAA,8BAEA;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,+BACA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAFA,eAMA;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,kBAGGhB,SAAS,IAAIA,SAAS,CAACY,GAAV,CAAc,CAACU,IAAD,EAAMQ,KAAN,kBAGlB;AAAK,UAAA,SAAS,EAAC,IAAf;AAAA,2CAEcR,IAFd,eAGA;AAAA;AAAA;AAAA;AAAA,kBAHA,6BAImBpB,WAAW,CAAC4B,KAAD,CAJ9B,eAOA;AAAA;AAAA;AAAA;AAAA,kBAPA,eAQA;AAAA;AAAA;AAAA;AAAA,kBARA,eASA;AAAA;AAAA;AAAA;AAAA,kBATA,eAUA;AAAA;AAAA;AAAA;AAAA,kBAVA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHI;AAHhB;AAAA;AAAA;AAAA;AAAA,cANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFQ,mBAHJ;AAgFH;;GA9JQ/B,c;;KAAAA,c;AAgKT,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport \"../StockDashboard/StockDashboard.css\"\nimport Sidenav from '../Widget/Stocklist/Sidenav/SideNav';\nfunction StockDashBoard(){\n\n\n  const[ stockname, setStockname]=useState([])\n  \n  const [totalInvest,setTotalInvest]=useState([]);\n\n  const [unit, setUnit]=useState([]);\n\n\n//   const all=[...stockname, ...allstock]\n\n// console.log(all)\n//   console.log(typeof(allstock))\n\n\n\n  useEffect(()=>{\n\n    fetch(\"http://localhost:8000/all-stocks\")\n    .then(res=>res.json())\n    .then(\n        (result)=>{\n\n            // setStockname(result)\n            // console.log(result)\n\n            const allstock=result.map(x=> x.stockname)\n            const unique=[...new Set(allstock)]\n\n            // setAllStock(unique)\n          setStockname(unique)\n          \n            \n\n            \n\n\n    \n\n          const investTotal=[];\n\n          const totalUnit=[];\n            for (var i=0; i<=unique.length-1; i++){\n\n                // const total=result.filter((item)=>item.stockname==unique[i]).map((item=>parseInt(item.amount)));\n                // const totalbuy=total.reduce((a,b)=>a+b)\n             \n                // setTotalBuy(totalbuy)\n\n\n                \n                const total_inv= result.filter((item)=> item.stockname==unique[i]).map((item)=>item.amount)\n\n                 const total=total_inv.reduce((a,b)=>parseInt(a)+parseInt(b));\n                \n            investTotal.push(parseInt(total))\n            // console.log(count)\n\n\n            // setAllStock(total)\n\n\n            \n            } \n            setTotalInvest(investTotal)\n\n         \n\n\n        }\n\n\n    )\n  },[])\n\n  \n\n    return (\n\n\n        <>\n\n<div  className=\"stockdashboard-main\">\n\n<div className=\"stokdashboard-part1\">\n<Sidenav/>\n</div>\n\n<div className=\"stokdashboard-part2\">\n\n{\n   stockname && stockname.map((item,index)=>(\n\n        \n            <div className=\"td\">\n               \n       Company Name:     {item}\n            <br/>\n       Total Investment:      {totalInvest[index]}\n\n\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n\n                </div>\n          \n        \n    ))\n}\n\n{/* <table className=\"table\">\n\n  \n   <th className=\"th\">\n<tr className=\"td\"> Comapany Name</tr>\n       </th>\n \n\n\n<tr className=\"tr\">\n{\n   stockname && stockname.map(item=>(\n\n        \n            <td className=\"td\">\n            {item}\n                </td>\n          \n        \n    ))\n}\n</tr>\n\n<tr className=\"tr\">\n{\n   allstock && allstock.map(item=>(\n\n       \n    <td className=\"td\">\n            {item}\n            </td>\n        \n    ))\n}\n</tr>\n\n\n\n\n</table> */}\n</div>\n\n</div>\n        </>\n    );\n}\n\nexport default StockDashBoard;"]},"metadata":{},"sourceType":"module"}